var gsTabCheckManager=function(){"use strict";const e=6e4,t=3e3,i="checkQueue";let s,n;function a(e,t,s){gsUtils.log(i,`Setting _tabCheckQueue props. jobTimeout: ${e}. processingDelay: ${t}. concurrentExecutors: ${s}`),n.setQueueProperties({jobTimeout:e,processingDelay:t,concurrentExecutors:s})}function o(e,t,s){r(e,t,s).catch((t=>{gsUtils.log(e.id,i,t)}))}function r(e,t,s){return gsUtils.log(e.id,i,"Queueing tab for responsiveness check."),t=t||{},n.queueTabAsPromise(e,t,s)}function d(e){return n.getQueuedTabDetails(e)}async function l(e,t,s,n,a,o){gsUtils.warning(e.id,i,`Failed to initialise tab: ${s}`),n(!1)}async function u(e,a,o,r,d){gsUtils.isSuspendedTab(e)?async function(e,a,o,r,d){if(a.resuspend&&!a.resuspended)return await c(e),void d(t,{resuspended:!0});if(a.refetchTab){if(gsUtils.log(e.id,i,"Tab refetch requested. Getting updated tab.."),!(e=await g(e)))return void o(gsUtils.STATUS_UNKNOWN);if(gsUtils.log(e.id,i,"Updated tab: ",e),!gsUtils.isSuspendedTab(e))return gsUtils.log(e.id,i,"Tab is no longer suspended. Aborting check."),void o(gsUtils.STATUS_UNKNOWN);if("loading"===e.status)return gsUtils.log(e.id,i,"Tab is still loading"),void d(t,{refetchTab:!0})}const l=tgs.getInternalViewByTabId(e.id);if(!l){if(gsUtils.log(e.id,i,"Could not find an internal view for suspended tab.",e),!a.resuspended){return await c(e)?void d(t,{resuspended:!0,refetchTab:!0}):(gsUtils.warning(e.id,i,"Failed to resuspend tab"),void o(gsUtils.STATUS_UNKNOWN))}return void d(t,{refetchTab:!0})}if(!gsSession.isFileUrlsAccessAllowed()){const s=gsUtils.getOriginalUrl(e.url);if(s&&0===s.indexOf("file"))return gsUtils.log(e.id,i,"Unsuspending blocked local file tab."),await async function(e){const t=gsUtils.getOriginalUrl(e.url);await gsChrome.tabsUpdate(e.id,{url:t})}(e),void d(t,{refetchTab:!0})}const u=gsStorage.getOption(gsStorage.DISCARD_AFTER_SUSPEND)&&!gsUtils.isDiscardedTab(e)&&!tgs.isCurrentActiveTab(e),T=l.document.sessionId===gsSession.getSessionId(),f=function(e){if(!e.favIconUrl||0!==e.favIconUrl.indexOf("data:image"))return gsUtils.log(e.id,i,"Tab favicon not set or not dataUrl.",e),!1;if(!e.title||e.title===s)return gsUtils.log(e.id,i,"Tab title not set",e),!1;return!0}(e),U=u||b(l);let p=!1;if(!(T&&f&&U)){if(!n.getQueuedTabDetails(e))return void o(gsUtils.STATUS_UNKNOWN);try{gsUtils.log(e.id,i,"Reinitialising suspendedTab: ",e);const t=u&&!e.active;await gsSuspendedTab.initTab(e,l,{quickInit:t}),p=!0}catch(s){return gsUtils.log(e.id,i,"Failed to reinitialise suspendedTab. Will requeue with refetching.",s),void d(t,{refetchTab:!0})}}let h=!1;if(u){if(p)return void d(t,{refetchTab:!0});h=await gsTabDiscardManager.queueTabForDiscardAsPromise(e)}o(h?gsUtils.STATUS_DISCARDED:gsUtils.STATUS_SUSPENDED)}(e,a,o,0,d):gsUtils.isNormalTab(e)&&async function(e,s,a,o,r){if(s.refetchTab){if(gsUtils.log(e.id,i,"Tab refetch requested. Getting updated tab.."),!(e=await g(e)))return void a(gsUtils.STATUS_UNKNOWN);if(gsUtils.log(e.id,i,"Updated tab: ",e),gsUtils.isSuspendedTab(e,!0))return gsUtils.log(e.id,i,"Tab is suspended. Aborting check."),void a(gsUtils.STATUS_SUSPENDED);if("loading"===e.status)return gsUtils.log(e.id,i,"Tab is still loading"),void r(t,{refetchTab:!0})}if(gsUtils.isDiscardedTab(e))return void(e.active?(gsUtils.log(e.id,i,"Tab is discarded but active. Will wait for auto reload."),r(500,{refetchTab:!0})):(gsUtils.log(e.id,i,"Tab is discarded. Will reload."),await gsChrome.tabsReload(e.id),r(t,{refetchTab:!0})));let d=await new Promise((t=>{gsMessages.sendRequestInfoToContentScript(e.id,((e,i)=>t(i)))}));if(d)return void a(d.status);const l=n.getQueuedTabDetails(e);if(!l)return gsUtils.log(e.id,i,"Tab missing from suspensionQueue?"),void a(gsUtils.STATUS_UNKNOWN);if(e.active&&0===l.requeues)return gsUtils.log(e.id,i,"Tab is not responding but active. Will wait for potential auto reload."),void r(500,{refetchTab:!1});d=await function(e){return new Promise((t=>{gsUtils.log(e.id,i,"Reinjecting contentscript into unresponsive unsuspended tab.",e);const s=setTimeout((()=>{gsUtils.log(i,e.id,"chrome.tabs.executeScript failed to trigger callback"),t(null)}),1e4);gsMessages.executeScriptOnTab(e.id,"js/contentscript.js",(i=>{if(clearTimeout(s),i)return gsUtils.log(e.id,"Failed to execute js/contentscript.js on tab",i),void t(null);tgs.initialiseTabContentScript(e).then((e=>{t(e)})).catch((e=>{t(null)}))}))}))}(e),a(d?d.status:gsUtils.STATUS_UNKNOWN)}(e,a,o,0,d)}async function g(e){let t=await gsChrome.tabsGet(e.id);return t||(gsUtils.warning(e.id,i,"Failed to initialize tab. Tab may have been discarded or removed."),gsSession.isInitialising()&&await async function(e){let t=await gsChrome.tabsQuery({discarded:!0,windowId:e.windowId});t=t.filter((t=>t.url===e.url)),gsUtils.log(e.id,i,"Searching for discarded tab matching tab: ",e);const s=t.find((t=>t.index===e.index));s&&(t=[s]);for(const e of t)await c(e),o(e,{refetchTab:!0},2e3)}(e)),t}async function c(e){gsUtils.log(e.id,i,"Resuspending unresponsive suspended tab.");tgs.getInternalViewByTabId(e.id)&&tgs.setTabStatePropForTabId(e.id,tgs.STATE_DISABLE_UNSUSPEND_ON_RELOAD,!0);return await gsChrome.tabsReload(e.id)}function b(e){if(!e)return!1;const t=e.document.getElementsByTagName("body")[0];return!!t&&!t.classList.contains("hide-initially")}return{initAsPromised:function(){return new Promise((t=>{const a={concurrentExecutors:3,jobTimeout:e,processingDelay:500,executorFn:u,exceptionFn:l};s=chrome.i18n.getMessage("html_suspended_title"),n=GsTabQueue(i,a),gsUtils.log(i,"init successful"),t()}))},performInitialisationTabChecks:async function(t){a(Math.max(1e3*t.length,e),500,3);const i=[];for(const e of t)gsUtils.isSuspendedTab(e)&&i.push(r(e,{resuspend:!0},1e3));const s=(e,t,i)=>{if(!gsUtils.isSuspendedTab(i)||!t||!t.hasOwnProperty("status")||"complete"!==t.status)return;gsUtils.log(i.id,"suspended tab loaded. status === complete");const s=d(i);s&&(s.tab=i,o(i,{refetchTab:!1},0))};chrome.tabs.onUpdated.addListener(s);const n=await Promise.all(i);return chrome.tabs.onUpdated.removeListener(s),a(e,500,3),n},queueTabCheck:o,queueTabCheckAsPromise:r,unqueueTabCheck:function(e){n.unqueueTab(e)&&gsUtils.log(e.id,i,"Removed tab from check queue.")},getQueuedTabCheckDetails:d,ensureSuspendedTabVisible:b}}();